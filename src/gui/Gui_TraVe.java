/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.HoaDon_DAO;
import dao.Ve_DAO;
import entity.HoaDon;
import entity.Ve;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale;

/**
 *
 * @author PC
 */
public class Gui_TraVe extends javax.swing.JPanel {

    private HoaDon_DAO hoaDonDAO;
    private Ve_DAO veDAO;
    private DefaultTableModel modelHoaDon;
    private DefaultTableModel modelVe;
    private NumberFormat currencyFormat;
    private DateTimeFormatter dateFormatter;
    private DateTimeFormatter timeFormatter;

    /**
     * Creates new form Gui_TraVe
     */
    public Gui_TraVe() {
        initComponents();
        initDAO();
        initCustomComponents();
        loadAllHoaDon();
    }
    
    private void initDAO() {
        hoaDonDAO = new HoaDon_DAO();
        veDAO = new Ve_DAO();
    }
    
    private void initCustomComponents() {
        // L·∫•y model c·ªßa c√°c table
        modelHoaDon = (DefaultTableModel) jTable1.getModel();
        modelVe = (DefaultTableModel) jTable2.getModel();
        
        // Format ti·ªÅn t·ªá v√† ng√†y gi·ªù
        currencyFormat = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
        dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        
        // Th√™m listener cho table h√≥a ƒë∆°n
        jTable1.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow >= 0) {
                    onHoaDonSelected(selectedRow);
                }
            }
        });
        
        // Th√™m listener cho table v√©
        jTable2.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = jTable2.getSelectedRow();
                if (selectedRow >= 0) {
                    onVeSelected(selectedRow);
                }
            }
        });
    }
    
    /**
     * Load 15 h√≥a ƒë∆°n g·∫ßn nh·∫•t
     */
    private void loadAllHoaDon() {
        System.out.println("üìã Loading 15 h√≥a ƒë∆°n g·∫ßn nh·∫•t...");
        modelHoaDon.setRowCount(0);
        
        List<HoaDon> danhSach = hoaDonDAO.findAll();
        System.out.println("‚úÖ T√¨m th·∫•y " + danhSach.size() + " h√≥a ƒë∆°n");
        
        // S·∫Øp x·∫øp theo ng√†y gi·ªù gi·∫£m d·∫ßn (m·ªõi nh·∫•t tr∆∞·ªõc)
        danhSach.sort((hd1, hd2) -> {
            if (hd1.getNgayTao() == null || hd2.getNgayTao() == null) return 0;
            int dateCompare = hd2.getNgayTao().compareTo(hd1.getNgayTao());
            if (dateCompare != 0) return dateCompare;
            if (hd1.getGioTao() == null || hd2.getGioTao() == null) return 0;
            return hd2.getGioTao().compareTo(hd1.getGioTao());
        });
        
        // Ch·ªâ l·∫•y 15 h√≥a ƒë∆°n ƒë·∫ßu ti√™n
        int count = 0;
        for (HoaDon hd : danhSach) {
            if (count >= 15) break;
            
            modelHoaDon.addRow(new Object[]{
                hd.getMaHoaDon(),
                hd.getNhanVien() != null ? hd.getNhanVien().getMaNhanVien() : "",
                hd.getKhachHang() != null ? hd.getKhachHang().getCCCD() : "",
                hd.getKhachHang() != null ? hd.getKhachHang().getHoTen() : "",
                hd.getKhachHang() != null ? hd.getKhachHang().getSDT() : "",
                hd.getKhuyenMai() != null ? hd.getKhuyenMai() : "Kh√¥ng",
                hd.getNgayTao() != null ? hd.getNgayTao().toLocalDate().format(dateFormatter) : "",
                hd.getGioTao() != null ? hd.getGioTao().toLocalTime().format(timeFormatter) : "",
                currencyFormat.format(hd.getTongTien())
            });
            count++;
        }
        
        System.out.println("‚úÖ ƒê√£ load " + count + " h√≥a ƒë∆°n g·∫ßn nh·∫•t");
    }
    
    /**
     * Khi ch·ªçn h√≥a ƒë∆°n ‚Üí Load danh s√°ch v√©
     */
    private void onHoaDonSelected(int row) {
        String maHoaDon = modelHoaDon.getValueAt(row, 0).toString();
        loadVeByHoaDon(maHoaDon);
        
        // Hi·ªÉn th·ªã th√¥ng tin h√≥a ƒë∆°n v√†o c√°c text field
        jTextField1.setText(modelHoaDon.getValueAt(row, 0).toString()); // M√£ h√≥a ƒë∆°n
        jTextField2.setText(modelHoaDon.getValueAt(row, 1).toString()); // M√£ NV
        jTextField3.setText(modelHoaDon.getValueAt(row, 2).toString()); // CCCD
        jTextField4.setText(modelHoaDon.getValueAt(row, 3).toString()); // T√™n KH
        jTextField5.setText(modelHoaDon.getValueAt(row, 4).toString()); // SƒêT
    }
    
    /**
     * Khi ch·ªçn v√© ‚Üí Hi·ªÉn th·ªã th√¥ng tin v√©
     */
    private void onVeSelected(int row) {
        try {
            // L·∫•y th√¥ng tin t·ª´ b·∫£ng v√©
            String maVe = modelVe.getValueAt(row, 0).toString();
            String cccd = modelVe.getValueAt(row, 1).toString();
            String tenKhach = modelVe.getValueAt(row, 2).toString();
            String giaVe = modelVe.getValueAt(row, 10).toString();
            
            // Hi·ªÉn th·ªã th√¥ng tin v√© v√†o c√°c text field
            // jTextField6: M√£ v√©
            // jTextField7: CCCD
            // jTextField8: H·ªç t√™n
            // jTextField9: Gi√°
            jTextField6.setText(maVe);
            jTextField7.setText(cccd);
            jTextField8.setText(tenKhach);
            jTextField9.setText(giaVe);
            
            System.out.println("‚úÖ ƒê√£ hi·ªÉn th·ªã th√¥ng tin v√©: " + maVe);
        } catch (Exception e) {
            System.out.println("‚ùå L·ªói hi·ªÉn th·ªã th√¥ng tin v√©: " + e.getMessage());
        }
    }
    
    /**
     * Parse string th√†nh double (lo·∫°i b·ªè k√Ω t·ª± ƒë·∫∑c bi·ªát nh∆∞ ‚Ç´, d·∫•u ph√¢n c√°ch)
     */
    private double parseDouble(String str) {
        if (str == null || str.trim().isEmpty()) return 0;
        
        // X√≥a t·∫•t c·∫£ k√Ω t·ª± kh√¥ng ph·∫£i s·ªë (bao g·ªìm c·∫£ d·∫•u ph√¢n c√°ch, ‚Ç´, kho·∫£ng tr·∫Øng, v.v.)
        str = str.replaceAll("[^0-9.]", "");
        
        try {
            return Double.parseDouble(str);
        } catch (NumberFormatException e) {
            return 0;
        }
    }
    
    /**
     * T√≠nh ti·ªÅn ho√†n tr·∫£ cho V√â C√Å NH√ÇN theo quy ƒë·ªãnh:
     * - D∆∞·ªõi 4 gi·ªù: kh√¥ng tr·∫£ v√© (0%)
     * - T·ª´ 4 ƒë·∫øn d∆∞·ªõi 24 gi·ªù: thu 20% gi√° v√© (ho√†n 80%)
     * - Tr√™n 24 gi·ªù: thu 10% gi√° v√© (ho√†n 90%)
     * - M·ª©c tr·∫£ v√© t·ªëi thi·ªÉu: 10.000ƒë/v√©
     * 
     * @param giaVe Gi√° v√©
     * @param gioKhoiHanh Th·ªùi gian kh·ªüi h√†nh
     * @return S·ªë ti·ªÅn ho√†n tr·∫£
     */
    private double tinhTienHoanTraCaNhan(double giaVe, java.time.LocalDateTime gioKhoiHanh) {
        if (gioKhoiHanh == null) return 0;
        
        java.time.LocalDateTime now = java.time.LocalDateTime.now();
        long hoursUntilDeparture = java.time.Duration.between(now, gioKhoiHanh).toHours();
        
        System.out.println("‚è±Ô∏è Th·ªùi gian c√≤n l·∫°i ƒë·∫øn kh·ªüi h√†nh: " + hoursUntilDeparture + " gi·ªù");
        
        // Ph·∫£i tr·∫£ tr∆∞·ªõc √≠t nh·∫•t 24 gi·ªù
        if (hoursUntilDeparture < 24) {
            System.out.println("‚ùå Kh√¥ng ƒë∆∞·ª£c tr·∫£ v√©: d∆∞·ªõi 24 gi·ªù tr∆∞·ªõc kh·ªüi h√†nh");
            return -1; // Kh√¥ng ƒë∆∞·ª£c tr·∫£ v√©
        }
        
        double tienHoan = 0;
        
        if (hoursUntilDeparture < 4) {
            // D∆∞·ªõi 4 gi·ªù: kh√¥ng tr·∫£ v√© (nh∆∞ng ƒë√£ check 24h ·ªü tr√™n r·ªìi)
            tienHoan = 0;
        } else if (hoursUntilDeparture < 24) {
            // T·ª´ 4 ƒë·∫øn d∆∞·ªõi 24 gi·ªù: ho√†n 80%
            tienHoan = giaVe * 0.8;
        } else {
            // Tr√™n 24 gi·ªù: ho√†n 90%
            tienHoan = giaVe * 0.9;
        }
        
        // M·ª©c tr·∫£ v√© t·ªëi thi·ªÉu: 10.000ƒë/v√©
        if (tienHoan > 0 && tienHoan < 10000) {
            tienHoan = 10000;
        }
        
        System.out.println("üí∞ Ti·ªÅn ho√†n tr·∫£: " + currencyFormat.format(tienHoan));
        return tienHoan;
    }
    
    /**
     * T√≠nh ti·ªÅn ho√†n tr·∫£ cho V√â T·∫¨P TH·ªÇ theo quy ƒë·ªãnh:
     * - D∆∞·ªõi 24 gi·ªù: kh√¥ng tr·∫£ v√© (0%)
     * - T·ª´ 24 ƒë·∫øn d∆∞·ªõi 72 gi·ªù: thu 20% gi√° v√© (ho√†n 80%)
     * - Tr√™n 72 gi·ªù: thu 10% gi√° v√© (ho√†n 90%)
     * 
     * @param giaVe Gi√° v√©
     * @param gioKhoiHanh Th·ªùi gian kh·ªüi h√†nh
     * @return S·ªë ti·ªÅn ho√†n tr·∫£
     */
    private double tinhTienHoanTraTapThe(double giaVe, java.time.LocalDateTime gioKhoiHanh) {
        if (gioKhoiHanh == null) return 0;
        
        java.time.LocalDateTime now = java.time.LocalDateTime.now();
        long hoursUntilDeparture = java.time.Duration.between(now, gioKhoiHanh).toHours();
        
        System.out.println("‚è±Ô∏è [T·∫¨P TH·ªÇ] Th·ªùi gian c√≤n l·∫°i ƒë·∫øn kh·ªüi h√†nh: " + hoursUntilDeparture + " gi·ªù");
        
        double tienHoan = 0;
        
        if (hoursUntilDeparture < 24) {
            // D∆∞·ªõi 24 gi·ªù: kh√¥ng tr·∫£ v√©
            System.out.println("‚ùå Kh√¥ng ƒë∆∞·ª£c tr·∫£ v√© t·∫≠p th·ªÉ: d∆∞·ªõi 24 gi·ªù tr∆∞·ªõc kh·ªüi h√†nh");
            return -1;
        } else if (hoursUntilDeparture < 72) {
            // T·ª´ 24 ƒë·∫øn d∆∞·ªõi 72 gi·ªù: ho√†n 80%
            tienHoan = giaVe * 0.8;
        } else {
            // Tr√™n 72 gi·ªù: ho√†n 90%
            tienHoan = giaVe * 0.9;
        }
        
        System.out.println("üí∞ [T·∫¨P TH·ªÇ] Ti·ªÅn ho√†n tr·∫£: " + currencyFormat.format(tienHoan));
        return tienHoan;
    }
    
    /**
     * Load danh s√°ch v√© theo m√£ h√≥a ƒë∆°n
     */
    private void loadVeByHoaDon(String maHoaDon) {
        System.out.println("üé´ Loading v√© cho h√≥a ƒë∆°n: " + maHoaDon);
        modelVe.setRowCount(0);
        
        // X√≥a th√¥ng tin v√© c≈©
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        
        List<Ve> danhSachVe = veDAO.findByMaHoaDon(maHoaDon);
        System.out.println("‚úÖ T√¨m th·∫•y " + danhSachVe.size() + " v√© (ch∆∞a tr·∫£)");
        
        for (Ve ve : danhSachVe) {
            modelVe.addRow(new Object[]{
                ve.getMaVe(),
                ve.getSoCCCD() != null ? ve.getSoCCCD() : "",
                ve.getTenKhachHang() != null ? ve.getTenKhachHang() : "",
                ve.getLoaiVe() != null ? ve.getLoaiVe().getTenLoaiVe() : "",
                ve.getLichTrinh() != null && ve.getLichTrinh().getGaDi() != null ? 
                    ve.getLichTrinh().getGaDi().getTenGa() : "",
                ve.getLichTrinh() != null && ve.getLichTrinh().getGaDen() != null ? 
                    ve.getLichTrinh().getGaDen().getTenGa() : "",
                ve.getLichTrinh() != null && ve.getLichTrinh().getChuyenTau() != null ? 
                    ve.getLichTrinh().getChuyenTau().getSoHieuTau() : "",
                ve.getChoNgoi() != null && ve.getChoNgoi().getToa() != null ? 
                    String.valueOf(ve.getChoNgoi().getToa().getSoToa()) : "",
                ve.getChoNgoi() != null ? String.valueOf(ve.getChoNgoi().getViTri()) : "",
                ve.getThoiGianLenTau() != null ? 
                    ve.getThoiGianLenTau().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")) : "",
                currencyFormat.format(ve.getGiaVe())
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnTimHoaDon = new javax.swing.JButton();
        btnInHoaDon = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnTraTapVe = new javax.swing.JButton();
        btnTimVe = new javax.swing.JButton();
        btnInVe = new javax.swing.JButton();
        btnTraVe = new javax.swing.JButton();

        setBackground(new java.awt.Color(234, 243, 251));

        jPanel1.setBackground(new java.awt.Color(234, 243, 251));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Th√¥ng tin h√≥a ƒë∆°n"));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("M√£ h√≥a ƒë∆°n:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("M√£ nh√¢n vi√™n:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("CCCD:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("T√™n kh√°ch h√†ng:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("S·ªë ƒëi·ªán tho·∫°i:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(42, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(234, 243, 251));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Th√¥ng tin v√©"));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("M√£ v√©:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("CCCD:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("H·ªç t√™n:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Gi√°:");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("H√≥a ƒê∆°n");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("B·∫£ng V√©");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "M√£ h√≥a ƒë∆°n", "M√£ nh√¢n vi√™n", "CCCD", "T√™n kh√°ch h√†ng", "S·ªë ƒëi·ªán tho·∫°i", "Khuy·∫øn m√£i", "Ng√†y l·∫≠p", "Gi·ªù l·∫≠p ", "T·ªïng ti·ªÅn"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "M√£ v√© ", "CCCD", "T√™n kh√°ch h√†ng", "ƒê·ªëi t∆∞·ª£ng", "Ga ƒëi ", "Ga ƒë·∫øn ", "M√£ t√†u", "S·ªë toa", "V·ªã tr√≠ ch·ªó ", "Gi·ªù l√™n t√†u", "Gi√°"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btnTimHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/TimKiem.png"))); // NOI18N
        btnTimHoaDon.setText("T√¨m h√≥a ƒë∆°n");
        btnTimHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimHoaDonActionPerformed(evt);
            }
        });

        btnInHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/print.png"))); // NOI18N
        btnInHoaDon.setText("In H√≥a ƒê∆°n");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/clear.png"))); // NOI18N
        btnXoaTrang.setText("X√≥a tr·∫Øng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        btnTraTapVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/documents.png"))); // NOI18N
        btnTraTapVe.setText("Tr·∫£ t·∫≠p v√©");
        btnTraTapVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraTapVeActionPerformed(evt);
            }
        });

        btnTimVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/TimKiem.png"))); // NOI18N
        btnTimVe.setText("T√¨m v√©");
        btnTimVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimVeActionPerformed(evt);
            }
        });

        btnInVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/print.png"))); // NOI18N
        btnInVe.setText("In v√©");
        btnInVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInVeActionPerformed(evt);
            }
        });

        btnTraVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exchange.png"))); // NOI18N
        btnTraVe.setText("Tr·∫£ v√©");
        btnTraVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraVeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTimHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTraTapVe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnXoaTrang, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnTimVe)
                                .addGap(27, 27, 27)
                                .addComponent(btnInVe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTraVe)
                                .addGap(18, 18, 18)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTraTapVe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimVe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInVe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTraVe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void btnTimHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimHoaDonActionPerformed
        // ‚ö° T√åM H√ìA ƒê∆†N theo b·∫•t k·ª≥ th√¥ng tin n√†o
        String maHD = jTextField1.getText().trim();
        String maNV = jTextField2.getText().trim();
        String cccd = jTextField3.getText().trim();
        String tenKH = jTextField4.getText().trim();
        String sdt = jTextField5.getText().trim();
        
        // N·∫øu t·∫•t c·∫£ ƒë·ªÅu tr·ªëng ‚Üí Load t·∫•t c·∫£
        if (maHD.isEmpty() && maNV.isEmpty() && cccd.isEmpty() && tenKH.isEmpty() && sdt.isEmpty()) {
            loadAllHoaDon();
            return;
        }
        
        System.out.println("üîç T√¨m ki·∫øm h√≥a ƒë∆°n v·ªõi: m√£=" + maHD + ", maNV=" + maNV + ", cccd=" + cccd + ", t√™n=" + tenKH + ", sdt=" + sdt);
        
        // L·ªçc h√≥a ƒë∆°n
        List<HoaDon> allHoaDon = hoaDonDAO.findAll();
        modelHoaDon.setRowCount(0);
        int count = 0;
        
        for (HoaDon hd : allHoaDon) {
            boolean match = true;
            
            // Ki·ªÉm tra t·ª´ng ƒëi·ªÅu ki·ªán (n·∫øu c√≥ nh·∫≠p)
            if (!maHD.isEmpty() && !hd.getMaHoaDon().toLowerCase().contains(maHD.toLowerCase())) {
                match = false;
            }
            if (!maNV.isEmpty() && hd.getNhanVien() != null && 
                !hd.getNhanVien().getMaNhanVien().toLowerCase().contains(maNV.toLowerCase())) {
                match = false;
            }
            if (!cccd.isEmpty() && hd.getKhachHang() != null && 
                !hd.getKhachHang().getCCCD().toLowerCase().contains(cccd.toLowerCase())) {
                match = false;
            }
            if (!tenKH.isEmpty() && hd.getKhachHang() != null && 
                !hd.getKhachHang().getHoTen().toLowerCase().contains(tenKH.toLowerCase())) {
                match = false;
            }
            if (!sdt.isEmpty() && hd.getKhachHang() != null && 
                !hd.getKhachHang().getSDT().toLowerCase().contains(sdt.toLowerCase())) {
                match = false;
            }
            
            if (match) {
                modelHoaDon.addRow(new Object[]{
                    hd.getMaHoaDon(),
                    hd.getNhanVien() != null ? hd.getNhanVien().getMaNhanVien() : "",
                    hd.getKhachHang() != null ? hd.getKhachHang().getCCCD() : "",
                    hd.getKhachHang() != null ? hd.getKhachHang().getHoTen() : "",
                    hd.getKhachHang() != null ? hd.getKhachHang().getSDT() : "",
                    hd.getKhuyenMai() != null ? hd.getKhuyenMai() : "Kh√¥ng",
                    hd.getNgayTao() != null ? hd.getNgayTao().toLocalDate().format(dateFormatter) : "",
                    hd.getGioTao() != null ? hd.getGioTao().toLocalTime().format(timeFormatter) : "",
                    currencyFormat.format(hd.getTongTien())
                });
                count++;
            }
        }
        
        System.out.println("‚úÖ T√¨m th·∫•y " + count + " h√≥a ƒë∆°n");
        
        if (count == 0) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n n√†o!",
                "K·∫øt qu·∫£ t√¨m ki·∫øm",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnTimHoaDonActionPerformed

    private void btnTraTapVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraTapVeActionPerformed
        // ‚ö° TR·∫¢ T·∫¨P V√â (V√â T·∫¨P TH·ªÇ) - T√≠nh ti·ªÅn ho√†n tr·∫£ theo quy ƒë·ªãnh
        
        // Ki·ªÉm tra xem ƒë√£ ch·ªçn h√≥a ƒë∆°n ch∆∞a
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn h√≥a ƒë∆°n c·∫ßn tr·∫£!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // L·∫•y th√¥ng tin h√≥a ƒë∆°n t·ª´ database
        String maHoaDon = modelHoaDon.getValueAt(selectedRow, 0).toString();
        entity.HoaDon hoaDonCanTra = hoaDonDAO.findByMaHoaDon(maHoaDon);
        if (hoaDonCanTra == null) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng t√¨m th·∫•y th√¥ng tin h√≥a ƒë∆°n!",
                "L·ªói",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        double tongTienHoaDon = hoaDonCanTra.getTongTien();
        
        System.out.println("üìã Tr·∫£ t·∫≠p v√© cho h√≥a ƒë∆°n: " + maHoaDon + " | T·ªïng ti·ªÅn: " + String.format("%,.0f ƒë", tongTienHoaDon));
        
        // Ki·ªÉm tra s·ªë l∆∞·ª£ng v√© trong b·∫£ng v√©
        int soLuongVe = modelVe.getRowCount();
        if (soLuongVe == 0) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng c√≥ v√© n√†o trong h√≥a ƒë∆°n n√†y!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        System.out.println("üé´ S·ªë l∆∞·ª£ng v√©: " + soLuongVe);
        
        // T√≠nh t·ªïng ti·ªÅn ho√†n tr·∫£ cho t·∫•t c·∫£ v√© (theo quy ƒë·ªãnh V√â T·∫¨P TH·ªÇ)
        double tongTienHoanLai = 0;
        boolean coVeKhongDuDieuKien = false;
        StringBuilder chiTietVe = new StringBuilder();
        
        for (int i = 0; i < soLuongVe; i++) {
            String maVe = modelVe.getValueAt(i, 0).toString();
            String thoiGianKhoiHanhStr = modelVe.getValueAt(i, 9).toString();
            
            // L·∫•y gi√° v√© t·ª´ database ƒë·ªÉ tr√°nh l·ªói parse t·ª´ GUI
            entity.Ve veHienTai = veDAO.findByMaVe(maVe);
            if (veHienTai == null) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y v√©: " + maVe);
                continue;
            }
            double giaVe = veHienTai.getGiaVe();
            
            // Parse th·ªùi gian kh·ªüi h√†nh
            java.time.LocalDateTime gioKhoiHanh = null;
            try {
                java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
                gioKhoiHanh = java.time.LocalDateTime.parse(thoiGianKhoiHanhStr, formatter);
            } catch (Exception e) {
                System.out.println("‚ùå L·ªói parse th·ªùi gian kh·ªüi h√†nh cho v√©: " + maVe);
                continue;
            }
            
            // T√≠nh ti·ªÅn ho√†n tr·∫£ cho v√© n√†y theo quy ƒë·ªãnh V√â T·∫¨P TH·ªÇ
            double tienHoanVe = tinhTienHoanTraTapThe(giaVe, gioKhoiHanh);
            
            if (tienHoanVe < 0) {
                coVeKhongDuDieuKien = true;
                chiTietVe.append(String.format("‚Ä¢ %s: Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán tr·∫£\n", maVe));
            } else {
                tongTienHoanLai += tienHoanVe;
                chiTietVe.append(String.format("‚Ä¢ %s: %s\n", maVe, currencyFormat.format(tienHoanVe)));
            }
        }
        
        // N·∫øu c√≥ v√© kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán ‚Üí H·ªèi xem c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng
        if (coVeKhongDuDieuKien) {
            String warning = "M·ªôt s·ªë v√© kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán tr·∫£!\n" +
                           "V√© t·∫≠p th·ªÉ ph·∫£i tr·∫£ tr∆∞·ªõc khi t√†u kh·ªüi h√†nh √≠t nh·∫•t 24 gi·ªù.\n\n" +
                           "Chi ti·∫øt:\n" + chiTietVe.toString() +
                           "\nB·∫°n c√≥ mu·ªën tr·∫£ c√°c v√© c√≤n l·∫°i kh√¥ng?";
            
            int confirm = JOptionPane.showConfirmDialog(
                this,
                warning,
                "C·∫£nh b√°o",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );
            
            if (confirm != JOptionPane.YES_OPTION) {
                System.out.println("‚ùå ƒê√£ h·ªßy tr·∫£ t·∫≠p v√©");
                return;
            }
        }
        
        // N·∫øu kh√¥ng c√≥ v√© n√†o ƒë∆∞·ª£c ho√†n tr·∫£
        if (tongTienHoanLai <= 0) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng c√≥ v√© n√†o ƒë·ªß ƒëi·ªÅu ki·ªán tr·∫£ trong h√≥a ƒë∆°n n√†y!",
                "Kh√¥ng th·ªÉ tr·∫£ v√©",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // T√≠nh chi·∫øt kh·∫•u (s·ªë ti·ªÅn b·ªã tr·ª´)
        double chietKhau = tongTienHoaDon - tongTienHoanLai;
        
        // Hi·ªán dialog x√°c nh·∫≠n
        String message = String.format(
            "X√°c nh·∫≠n tr·∫£ t·∫≠p v√© cho h√≥a ƒë∆°n %s?\n\n" +
            "S·ªë l∆∞·ª£ng v√©: %d\n" +
            "T·ªïng ti·ªÅn h√≥a ƒë∆°n: %,.0f ƒë\n" +
            "Chi·∫øt kh·∫•u: %,.0f ƒë\n" +
            "S·ªë ti·ªÅn ho√†n l·∫°i: %,.0f ƒë",
            maHoaDon,
            soLuongVe,
            tongTienHoaDon,
            chietKhau,
            tongTienHoanLai
        );
        
        int choice = JOptionPane.showConfirmDialog(
            this,
            message,
            "X√°c nh·∫≠n",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        
        if (choice == JOptionPane.YES_OPTION) {
            // ‚ö° X·ª≠ l√Ω logic tr·∫£ t·∫≠p v√© trong database
            System.out.println("‚úÖ ƒêang x·ª≠ l√Ω tr·∫£ t·∫≠p v√© cho h√≥a ƒë∆°n: " + maHoaDon);
            System.out.println("üí∞ T·ªïng ti·ªÅn ho√†n l·∫°i: " + currencyFormat.format(tongTienHoanLai));
            
            int soVeDaTra = 0;
            
            // 1. C·∫≠p nh·∫≠t tr·∫°ng th√°i t·∫•t c·∫£ v√© trong h√≥a ƒë∆°n th√†nh 0 (ƒë√£ tr·∫£)
            for (int i = 0; i < soLuongVe; i++) {
                String maVe = modelVe.getValueAt(i, 0).toString();
                boolean success = veDAO.delete(maVe); // Set trangThai = 0
                if (success) {
                    soVeDaTra++;
                    System.out.println("   ‚úÖ ƒê√£ tr·∫£ v√©: " + maVe);
                } else {
                    System.err.println("   ‚ùå L·ªói khi tr·∫£ v√©: " + maVe);
                }
            }
            
            // 2. C·∫≠p nh·∫≠t t·ªïng ti·ªÅn h√≥a ƒë∆°n (tr·ª´ s·ªë ti·ªÅn ho√†n l·∫°i)
            dao.HoaDon_DAO hdDAO = new dao.HoaDon_DAO();
            double tongTienMoi = tongTienHoaDon - tongTienHoanLai; // Tr·ª´ s·ªë ti·ªÅn ho√†n l·∫°i
            if (tongTienMoi < 0) tongTienMoi = 0; // ƒê·∫£m b·∫£o kh√¥ng √¢m
            
            hdDAO.updateTongTien(maHoaDon, tongTienMoi);
            System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t t·ªïng ti·ªÅn h√≥a ƒë∆°n: " + maHoaDon + 
                " | C≈©: " + currencyFormat.format(tongTienHoaDon) + 
                " | M·ªõi: " + currencyFormat.format(tongTienMoi) +
                " | ƒê√£ tr·ª´: " + currencyFormat.format(tongTienHoanLai));
            
            // 3. Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            JOptionPane.showMessageDialog(this,
                String.format("ƒê√£ tr·∫£ t·∫≠p v√© th√†nh c√¥ng!\nS·ªë v√© ƒë√£ tr·∫£: %d/%d\nS·ªë ti·ªÅn ho√†n l·∫°i: %,.0f ƒë",
                    soVeDaTra, soLuongVe, tongTienHoanLai),
                "Th√†nh c√¥ng",
                JOptionPane.INFORMATION_MESSAGE);
            
            // 4. Reload l·∫°i danh s√°ch h√≥a ƒë∆°n v√† x√≥a b·∫£ng v√©
            loadAllHoaDon();
            modelVe.setRowCount(0); // Clear b·∫£ng v√© v√¨ ƒë√£ tr·∫£ h·∫øt
            
            System.out.println("‚úÖ Ho√†n t·∫•t tr·∫£ t·∫≠p v√©");
        } else {
            System.out.println("‚ùå ƒê√£ h·ªßy tr·∫£ t·∫≠p v√©");
        }
    }//GEN-LAST:event_btnTraTapVeActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // ‚ö° X√ìA TR·∫ÆNG - Clear t·∫•t c·∫£ text field
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        
        // Clear b·∫£ng v√©
        modelVe.setRowCount(0);
        
        // Reload t·∫•t c·∫£ h√≥a ƒë∆°n
        loadAllHoaDon();
        
        System.out.println("üßπ ƒê√£ x√≥a tr·∫Øng t·∫•t c·∫£ d·ªØ li·ªáu");
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnTraVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraVeActionPerformed
        // ‚ö° TR·∫¢ V√â ƒê∆†N L·∫∫ (V√â C√Å NH√ÇN)
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn v√© c·∫ßn tr·∫£!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String maVe = modelVe.getValueAt(selectedRow, 0).toString();
        String thoiGianKhoiHanhStr = modelVe.getValueAt(selectedRow, 9).toString();
        
        System.out.println("üé´ Tr·∫£ v√©: " + maVe + " | Kh·ªüi h√†nh: " + thoiGianKhoiHanhStr);
        
        // L·∫•y gi√° v√© t·ª´ database ƒë·ªÉ tr√°nh l·ªói parse t·ª´ GUI
        entity.Ve veCanTra = veDAO.findByMaVe(maVe);
        if (veCanTra == null) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng t√¨m th·∫•y th√¥ng tin v√©!",
                "L·ªói",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        double giaVe = veCanTra.getGiaVe();
        
        // Parse th·ªùi gian kh·ªüi h√†nh (format: "dd/MM/yyyy HH:mm")
        java.time.LocalDateTime gioKhoiHanh = null;
        try {
            java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
            gioKhoiHanh = java.time.LocalDateTime.parse(thoiGianKhoiHanhStr, formatter);
        } catch (Exception e) {
            System.out.println("‚ùå L·ªói parse th·ªùi gian kh·ªüi h√†nh: " + e.getMessage());
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng th·ªÉ x√°c ƒë·ªãnh th·ªùi gian kh·ªüi h√†nh c·ªßa v√©!",
                "L·ªói",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // T√≠nh ti·ªÅn ho√†n tr·∫£ theo quy ƒë·ªãnh V√â C√Å NH√ÇN
        double tienHoanLai = tinhTienHoanTraCaNhan(giaVe, gioKhoiHanh);
        
        if (tienHoanLai < 0) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng th·ªÉ tr·∫£ v√©!\n" +
                "V√© c√° nh√¢n ph·∫£i tr·∫£ tr∆∞·ªõc khi t√†u kh·ªüi h√†nh √≠t nh·∫•t 24 gi·ªù.",
                "Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán tr·∫£ v√©",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // T√≠nh chi·∫øt kh·∫•u (s·ªë ti·ªÅn b·ªã tr·ª´)
        double chietKhau = giaVe - tienHoanLai;
        
        // Hi·ªÉn th·ªã dialog x√°c nh·∫≠n
        String message = String.format(
            "X√°c nh·∫≠n tr·∫£ v√© %s?\n\n" +
            "Gi√° v√©: %,.0f ƒë\n" +
            "Chi·∫øt kh·∫•u: %,.0f ƒë\n" +
            "S·ªë ti·ªÅn ho√†n l·∫°i: %,.0f ƒë",
            maVe,
            giaVe,
            chietKhau,
            tienHoanLai
        );
        
        int choice = JOptionPane.showConfirmDialog(
            this,
            message,
            "X√°c nh·∫≠n tr·∫£ v√©",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        
        if (choice == JOptionPane.YES_OPTION) {
            // ‚ö° X·ª≠ l√Ω logic tr·∫£ v√© trong database
            System.out.println("‚úÖ ƒêang x·ª≠ l√Ω tr·∫£ v√©: " + maVe);
            System.out.println("üí∞ Ti·ªÅn ho√†n l·∫°i: " + currencyFormat.format(tienHoanLai));
            
            // 1. C·∫≠p nh·∫≠t tr·∫°ng th√°i v√© th√†nh 0 (ƒë√£ tr·∫£)
            boolean updateSuccess = veDAO.delete(maVe); // delete() = soft delete (set trangThai = 0)
            
            if (!updateSuccess) {
                JOptionPane.showMessageDialog(this,
                    "L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i v√©!",
                    "L·ªói",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // 2. L·∫•y m√£ h√≥a ƒë∆°n v√† c·∫≠p nh·∫≠t t·ªïng ti·ªÅn (tr·ª´ s·ªë ti·ªÅn ho√†n l·∫°i)
            int hoaDonRow = jTable1.getSelectedRow();
            String maHoaDon = hoaDonRow >= 0 ? modelHoaDon.getValueAt(hoaDonRow, 0).toString() : null;
            
            if (maHoaDon != null) {
                // L·∫•y t·ªïng ti·ªÅn hi·ªán t·∫°i c·ªßa h√≥a ƒë∆°n
                dao.HoaDon_DAO hdDAO = new dao.HoaDon_DAO();
                entity.HoaDon hoaDon = hdDAO.findByMaHoaDon(maHoaDon);
                if (hoaDon != null) {
                    double tongTienCu = hoaDon.getTongTien();
                    double tongTienMoi = tongTienCu - tienHoanLai; // Tr·ª´ s·ªë ti·ªÅn ho√†n l·∫°i
                    if (tongTienMoi < 0) tongTienMoi = 0; // ƒê·∫£m b·∫£o kh√¥ng √¢m
                    
                    hdDAO.updateTongTien(maHoaDon, tongTienMoi);
                    System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t t·ªïng ti·ªÅn h√≥a ƒë∆°n: " + maHoaDon + 
                        " | C≈©: " + currencyFormat.format(tongTienCu) + 
                        " | M·ªõi: " + currencyFormat.format(tongTienMoi) +
                        " | ƒê√£ tr·ª´: " + currencyFormat.format(tienHoanLai));
                }
            }
            
            // 3. Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            JOptionPane.showMessageDialog(this,
                String.format("ƒê√£ tr·∫£ v√© th√†nh c√¥ng!\nS·ªë ti·ªÅn ho√†n l·∫°i: %,.0f ƒë", tienHoanLai),
                "Th√†nh c√¥ng",
                JOptionPane.INFORMATION_MESSAGE);
            
            // 4. Reload l·∫°i b·∫£ng v√© v√† h√≥a ƒë∆°n
            if (maHoaDon != null) {
                loadVeByHoaDon(maHoaDon); // Reload b·∫£ng v√© (v√© ƒë√£ tr·∫£ s·∫Ω bi·∫øn m·∫•t)
                loadAllHoaDon(); // Reload b·∫£ng h√≥a ƒë∆°n (t·ªïng ti·ªÅn ƒë√£ thay ƒë·ªïi)
            }
            
            System.out.println("‚úÖ Ho√†n t·∫•t tr·∫£ v√©");
        } else {
            System.out.println("‚ùå ƒê√£ h·ªßy tr·∫£ v√©");
        }
    }//GEN-LAST:event_btnTraVeActionPerformed

    private void btnInVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInVeActionPerformed
        // ‚ö° IN V√â - M·ªü Dialog_Ve v·ªõi d·ªØ li·ªáu v√© ƒë√£ ch·ªçn
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn v√© c·∫ßn in!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String maVe = modelVe.getValueAt(selectedRow, 0).toString();
        System.out.println("üñ®Ô∏è In v√©: " + maVe);
        
        // L·∫•y h√≥a ƒë∆°n hi·ªán t·∫°i
        int hoaDonRow = jTable1.getSelectedRow();
        if (hoaDonRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn h√≥a ƒë∆°n tr∆∞·ªõc!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String maHoaDon = modelHoaDon.getValueAt(hoaDonRow, 0).toString();
        
        // L·∫•y danh s√°ch v√© t·ª´ database
        List<Ve> danhSachVe = veDAO.findByMaHoaDon(maHoaDon);
        
        // T√¨m v√© c√≥ m√£ tr√πng kh·ªõp
        Ve veCanIn = null;
        for (Ve ve : danhSachVe) {
            if (ve.getMaVe().equals(maVe)) {
                veCanIn = ve;
                break;
            }
        }
        
        if (veCanIn == null) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng t√¨m th·∫•y th√¥ng tin v√©!",
                "L·ªói",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // M·ªü Dialog_Ve
        java.awt.Frame parentFrame = (java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this);
        Dialog_Ve dialogVe = new Dialog_Ve(parentFrame, false, veCanIn);
        dialogVe.setVisible(true);
        
        System.out.println("‚úÖ ƒê√£ m·ªü Dialog_Ve cho v√©: " + maVe);
    }//GEN-LAST:event_btnInVeActionPerformed
    
    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        // ‚ö° IN H√ìA ƒê∆†N - M·ªü Dialog_HoaDon v√† load d·ªØ li·ªáu t·ª´ database
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn h√≥a ƒë∆°n c·∫ßn in!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // L·∫•y m√£ h√≥a ƒë∆°n
        String maHoaDon = modelHoaDon.getValueAt(selectedRow, 0).toString();
        
        System.out.println("üñ®Ô∏è M·ªü Dialog_HoaDon cho m√£: " + maHoaDon);
        
        // M·ªü Dialog_HoaDon v·ªõi constructor load t·ª´ database
        // Constructor n√†y s·∫Ω t·ª± ƒë·ªông load to√†n b·ªô th√¥ng tin h√≥a ƒë∆°n v√† v√© t·ª´ DB
        java.awt.Frame parentFrame = (java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this);
        Dialog_HoaDon dialogHoaDon = new Dialog_HoaDon(parentFrame, false, maHoaDon);
        dialogHoaDon.setVisible(true);
        
        System.out.println("‚úÖ ƒê√£ m·ªü Dialog_HoaDon v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin v√©");
    }//GEN-LAST:event_btnInHoaDonActionPerformed
    
    private void btnTimVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimVeActionPerformed
        // ‚ö° T√åM V√â theo th√¥ng tin
        String maVe = jTextField6.getText().trim();
        String cccd = jTextField7.getText().trim();
        String hoTen = jTextField8.getText().trim();
        
        // N·∫øu t·∫•t c·∫£ ƒë·ªÅu tr·ªëng ‚Üí Y√™u c·∫ßu ch·ªçn h√≥a ƒë∆°n
        if (maVe.isEmpty() && cccd.isEmpty() && hoTen.isEmpty()) {
            int hoaDonRow = jTable1.getSelectedRow();
            if (hoaDonRow >= 0) {
                String maHoaDon = modelHoaDon.getValueAt(hoaDonRow, 0).toString();
                loadVeByHoaDon(maHoaDon);
            } else {
                JOptionPane.showMessageDialog(this,
                    "Vui l√≤ng ch·ªçn h√≥a ƒë∆°n ho·∫∑c nh·∫≠p th√¥ng tin v√© ƒë·ªÉ t√¨m ki·∫øm!",
                    "Th√¥ng b√°o",
                    JOptionPane.WARNING_MESSAGE);
            }
            return;
        }
        
        System.out.println("üîç T√¨m ki·∫øm v√© v·ªõi: m√£=" + maVe + ", cccd=" + cccd + ", t√™n=" + hoTen);
        
        // L·∫•y danh s√°ch v√© hi·ªán t·∫°i v√† l·ªçc
        int hoaDonRow = jTable1.getSelectedRow();
        if (hoaDonRow < 0) {
            JOptionPane.showMessageDialog(this,
                "Vui l√≤ng ch·ªçn h√≥a ƒë∆°n tr∆∞·ªõc!",
                "Th√¥ng b√°o",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String maHoaDon = modelHoaDon.getValueAt(hoaDonRow, 0).toString();
        List<Ve> allVe = veDAO.findByMaHoaDon(maHoaDon);
        
        modelVe.setRowCount(0);
        int count = 0;
        
        for (Ve ve : allVe) {
            boolean match = true;
            
            if (!maVe.isEmpty() && !ve.getMaVe().toLowerCase().contains(maVe.toLowerCase())) {
                match = false;
            }
            if (!cccd.isEmpty() && (ve.getSoCCCD() == null || !ve.getSoCCCD().toLowerCase().contains(cccd.toLowerCase()))) {
                match = false;
            }
            if (!hoTen.isEmpty() && (ve.getTenKhachHang() == null || !ve.getTenKhachHang().toLowerCase().contains(hoTen.toLowerCase()))) {
                match = false;
            }
            
            if (match) {
                modelVe.addRow(new Object[]{
                    ve.getMaVe(),
                    ve.getSoCCCD() != null ? ve.getSoCCCD() : "",
                    ve.getTenKhachHang() != null ? ve.getTenKhachHang() : "",
                    ve.getLoaiVe() != null ? ve.getLoaiVe().getTenLoaiVe() : "",
                    ve.getLichTrinh() != null && ve.getLichTrinh().getGaDi() != null ? 
                        ve.getLichTrinh().getGaDi().getTenGa() : "",
                    ve.getLichTrinh() != null && ve.getLichTrinh().getGaDen() != null ? 
                        ve.getLichTrinh().getGaDen().getTenGa() : "",
                    ve.getLichTrinh() != null && ve.getLichTrinh().getChuyenTau() != null ? 
                        ve.getLichTrinh().getChuyenTau().getSoHieuTau() : "",
                    ve.getChoNgoi() != null && ve.getChoNgoi().getToa() != null ? 
                        String.valueOf(ve.getChoNgoi().getToa().getSoToa()) : "",
                    ve.getChoNgoi() != null ? String.valueOf(ve.getChoNgoi().getViTri()) : "",
                    ve.getThoiGianLenTau() != null ? 
                        ve.getThoiGianLenTau().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")) : "",
                    currencyFormat.format(ve.getGiaVe())
                });
                count++;
            }
        }
        
        System.out.println("‚úÖ T√¨m th·∫•y " + count + " v√©");
        
        if (count == 0) {
            JOptionPane.showMessageDialog(this,
                "Kh√¥ng t√¨m th·∫•y v√© n√†o!",
                "K·∫øt qu·∫£ t√¨m ki·∫øm",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnTimVeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnInVe;
    private javax.swing.JButton btnTimHoaDon;
    private javax.swing.JButton btnTimVe;
    private javax.swing.JButton btnTraTapVe;
    private javax.swing.JButton btnTraVe;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
