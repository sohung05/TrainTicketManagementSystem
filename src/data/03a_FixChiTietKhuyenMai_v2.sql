-- =============================================
-- Script: Fix ChiTietKhuyenMai Schema (Dynamic)
-- M√¥ t·∫£: T·∫°o l·∫°i b·∫£ng v·ªõi ki·ªÉu d·ªØ li·ªáu ƒë·ªông t·ª´ b·∫£ng g·ªëc
-- =============================================

USE HTQLVT;
GO

PRINT N'üîß ƒêang s·ª≠a schema b·∫£ng ChiTietKhuyenMai...';
PRINT N'‚ö†Ô∏è  S·∫Ω backup d·ªØ li·ªáu c≈© ‚Üí X√≥a b·∫£ng ‚Üí T·∫°o l·∫°i b·∫£ng m·ªõi';
GO

-- B∆Ø·ªöC 1: Backup d·ªØ li·ªáu c≈© (n·∫øu c√≥)
IF OBJECT_ID('ChiTietKhuyenMai_Backup', 'U') IS NOT NULL
    DROP TABLE ChiTietKhuyenMai_Backup;

IF OBJECT_ID('ChiTietKhuyenMai', 'U') IS NOT NULL
BEGIN
    IF EXISTS (SELECT 1 FROM ChiTietKhuyenMai)
    BEGIN
        SELECT * INTO ChiTietKhuyenMai_Backup FROM ChiTietKhuyenMai;
        PRINT N'‚úÖ ƒê√£ backup d·ªØ li·ªáu c≈© v√†o ChiTietKhuyenMai_Backup';
    END
    ELSE
    BEGIN
        PRINT N'‚ÑπÔ∏è  B·∫£ng ChiTietKhuyenMai kh√¥ng c√≥ d·ªØ li·ªáu, b·ªè qua backup';
    END
    
    -- B∆Ø·ªöC 2: X√≥a b·∫£ng c≈©
    DROP TABLE ChiTietKhuyenMai;
    PRINT N'‚úÖ ƒê√£ x√≥a b·∫£ng ChiTietKhuyenMai c≈©';
END
ELSE
BEGIN
    PRINT N'‚ÑπÔ∏è  B·∫£ng ChiTietKhuyenMai kh√¥ng t·ªìn t·∫°i, b·ªè qua backup';
END
GO

-- B∆Ø·ªöC 3: L·∫•y ki·ªÉu d·ªØ li·ªáu t·ª´ b·∫£ng g·ªëc
DECLARE @dataTypeKM NVARCHAR(50);
DECLARE @dataTypeHD NVARCHAR(50);
DECLARE @sql NVARCHAR(MAX);

-- L·∫•y ki·ªÉu d·ªØ li·ªáu c·ªßa KhuyenMai.maKhuyenMai
SELECT @dataTypeKM = DATA_TYPE + '(' + CAST(CHARACTER_MAXIMUM_LENGTH AS VARCHAR(10)) + ')'
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'KhuyenMai' AND COLUMN_NAME = 'maKhuyenMai';

-- L·∫•y ki·ªÉu d·ªØ li·ªáu c·ªßa HoaDon.maHoaDon
SELECT @dataTypeHD = DATA_TYPE + '(' + CAST(CHARACTER_MAXIMUM_LENGTH AS VARCHAR(10)) + ')'
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'HoaDon' AND COLUMN_NAME = 'maHoaDon';

PRINT N'üìä Ki·ªÉu d·ªØ li·ªáu ph√°t hi·ªán:';
PRINT N'   - KhuyenMai.maKhuyenMai: ' + @dataTypeKM;
PRINT N'   - HoaDon.maHoaDon: ' + @dataTypeHD;

-- B∆Ø·ªöC 4: T·∫°o b·∫£ng ƒë·ªông v·ªõi ki·ªÉu d·ªØ li·ªáu ph√π h·ª£p
SET @sql = N'
CREATE TABLE ChiTietKhuyenMai (
    maChiTiet INT IDENTITY(1,1) PRIMARY KEY,
    maKhuyenMai ' + @dataTypeKM + N' NOT NULL,
    maHoaDon ' + @dataTypeHD + N' NULL,
    dieuKien NVARCHAR(100) NOT NULL,
    chietKhau FLOAT NOT NULL,
    
    CONSTRAINT FK_CTKM_KhuyenMai FOREIGN KEY (maKhuyenMai) REFERENCES KhuyenMai(maKhuyenMai),
    CONSTRAINT FK_CTKM_HoaDon FOREIGN KEY (maHoaDon) REFERENCES HoaDon(maHoaDon)
);
';

EXEC sp_executesql @sql;

PRINT N'‚úÖ ƒê√£ t·∫°o l·∫°i b·∫£ng ChiTietKhuyenMai v·ªõi schema m·ªõi';
PRINT N'   - maChiTiet: INT IDENTITY (PK)';
PRINT N'   - maKhuyenMai: ' + @dataTypeKM + N' NOT NULL';
PRINT N'   - maHoaDon: ' + @dataTypeHD + N' NULL ‚≠ê';
PRINT N'   - dieuKien: NVARCHAR(100) NOT NULL';
PRINT N'   - chietKhau: FLOAT NOT NULL';
GO

-- B∆Ø·ªöC 5: Kh√¥i ph·ª•c d·ªØ li·ªáu c≈© (n·∫øu c√≥)
IF OBJECT_ID('ChiTietKhuyenMai_Backup', 'U') IS NOT NULL
BEGIN
    INSERT INTO ChiTietKhuyenMai (maKhuyenMai, maHoaDon, dieuKien, chietKhau)
    SELECT maKhuyenMai, maHoaDon, dieuKien, chietKhau
    FROM ChiTietKhuyenMai_Backup;
    
    DECLARE @rowCount INT = @@ROWCOUNT;
    PRINT N'‚úÖ ƒê√£ kh√¥i ph·ª•c ' + CAST(@rowCount AS NVARCHAR(10)) + N' d√≤ng d·ªØ li·ªáu c≈©';
    
    -- X√≥a b·∫£ng backup
    DROP TABLE ChiTietKhuyenMai_Backup;
    PRINT N'‚úÖ ƒê√£ x√≥a b·∫£ng backup';
END
GO

PRINT N'';
PRINT N'‚úÖ HO√ÄN TH√ÄNH! B·∫£ng ChiTietKhuyenMai ƒë√£ ƒë∆∞·ª£c s·ª≠a.';
PRINT N'üìù B√¢y gi·ªù c√≥ th·ªÉ ch·∫°y l·∫°i script 03_InsertKhuyenMai.sql';
GO






